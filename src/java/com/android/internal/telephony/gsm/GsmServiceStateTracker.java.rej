--- src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java
+++ src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java
@@ -80,4 +80,12 @@
 import java.util.TimeZone;
 
+//////////////////////////////////////////////////////////
+import android.os.ServiceManager;
+import android.privacy.IPrivacySettingsManager;
+import android.privacy.PrivacySettings;
+import android.privacy.PrivacySettingsManager;
+import java.util.Random;
+//////////////////////////////////////////////////////////
+
 /**
  * {@hide}
@@ -92,4 +100,9 @@
     int mPreferredNetworkType;
 
+    // BEGIN privacy additions
+    private Context mContext;
+    private PrivacySettingsManager pSetMan;
+    // END privacy
+
     private int mMaxDataCalls = 1;
     private int mNewMaxDataCalls = 1;
@@ -230,5 +243,11 @@
         filter.addAction(Intent.ACTION_LOCALE_CHANGED);
         phone.getContext().registerReceiver(mIntentReceiver, filter);
-
+        
+        //--------------------------------------------------------------------------
+        this.mContext = phone.getContext();
+        pSetMan = new PrivacySettingsManager(mContext, IPrivacySettingsManager.Stub.asInterface(ServiceManager.getService("privacy")));
+        //--------------------------------------------------------------------------
+        
+        
         // Gsm doesn't support OTASP so its not needed
         phone.notifyOtaspChanged(OTASP_NOT_NEEDED);
@@ -340,6 +359,21 @@
                         }
                     }
-                    mCellLoc.setLacAndCid(lac, cid);
-                    mPhone.notifyLocationChanged();
+                    // BEGIN privacy additions
+                    PrivacySettings settings = pSetMan.getSettings(mContext.getPackageName(), 0);
+                    if(pSetMan != null && settings != null && settings.getLocationNetworkSetting() == PrivacySettings.EMPTY){
+                    	//we will update with invalid cell location values
+                    	mCellLoc.setStateInvalid();
+                    	mPhone.notifyLocationChanged();
+                    }
+                    else if(pSetMan != null && settings != null && settings.getLocationNetworkSetting() == PrivacySettings.RANDOM){
+                    	Random values = new Random();
+                    	mCellLoc.setLacAndCid(values.nextInt(), values.nextInt());
+                        mPhone.notifyLocationChanged();
+                    }
+                    else{
+                    	mCellLoc.setLacAndCid(lac, cid);
+                        mPhone.notifyLocationChanged();
+                    }
+                     // END privacy
                 }
 
@@ -604,4 +638,5 @@
             }
         } else try {
+        	PrivacySettings settings = pSetMan.getSettings(mContext.getPackageName(), 0);
             switch (what) {
                 case EVENT_POLL_STATE_REGISTRATION: {
@@ -656,6 +691,20 @@
 
                     // LAC and CID are -1 if not avail
-                    mNewCellLoc.setLacAndCid(lac, cid);
-                    mNewCellLoc.setPsc(psc);
+                    // BEGIN privacy additions
+                    if(pSetMan != null && settings != null && settings.getLocationNetworkSetting() == PrivacySettings.EMPTY){
+                    	//we will update with invalid cell location values
+                    	mNewCellLoc.setStateInvalid();
+                        mNewCellLoc.setPsc(psc);
+                    }
+                    else if(pSetMan != null && settings != null && settings.getLocationNetworkSetting() == PrivacySettings.RANDOM){
+                    	Random values = new Random();
+                    	mNewCellLoc.setLacAndCid(values.nextInt(), values.nextInt());
+                        mNewCellLoc.setPsc(psc);
+                    }
+                    else{
+                    	mNewCellLoc.setLacAndCid(lac, cid);
+                        mNewCellLoc.setPsc(psc);
+                    }
+                    // END privacy
                     break;
                 }
@@ -703,5 +752,12 @@
 
                     if (opNames != null && opNames.length >= 3) {
-                         mNewSS.setOperatorName (opNames[0], opNames[1], opNames[2]);
+                        // BEGIN privacy additions
+                        if(pSetMan != null && settings != null && settings.getNetworkInfoSetting() != PrivacySettings.REAL){
+                        	mNewSS.setOperatorName ("", "", "");
+                        }
+                        else{
+                        	mNewSS.setOperatorName (opNames[0], opNames[1], opNames[2]);
+                        }
+                        // END privacy
                     }
                     break;
@@ -1068,5 +1124,5 @@
 
         if (hasLocationChanged) {
-            mPhone.notifyLocationChanged();
+            mPhone.notifyLocationChanged(); //we can notify, because all sensitive data has changed before @author CollegeDev
         }
 
